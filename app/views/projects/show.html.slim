== render :partial => 'shared/welcome_modal', :locals => {:organization => @project.organization}
== render :partial => 'shared/masthead', :locals => {:organization => @project.organization}
== render :partial => 'shared/project_nav'

div class="row"
  div class="span12"
    span class="pull-right"
        = link_to "New budget", new_organization_project_path(@organization)
        '  |
        = link_to "Edit this budget", edit_organization_project_path(@organization, @project)
        '  |
        = link_to "Delete", { :action => "destroy", :id => @project.id }, :confirm => "Are you sure?", :method => :delete

== render :partial => 'shared/not_verified'

div class="row"
  div id="expenses" class="span12"
  javascript:
    var w = 460,
    h = 400,
    color = d3.scale.category20c();

    var treemap = d3.layout.treemap()
        .size([w, h])
        .sticky(true)
        .value(function(d) { return d.size; });

    var div = d3.select("#expenses").append("div")
        .style("position", "relative")
        .style("width", w + "px")
        .style("height", h + "px");

    d3.json("/api/v1/categories/#{@project.id}.json", function(json) {
      div.data([json]).selectAll("div")
          .data(treemap.nodes)
        .enter().append("div")
          .attr("class", "cell")
          .style("background", function(d) { return d.children ? color(d.name) : color(d.name); })
          .call(cell)
          .text(function(d) { return d.children ? null : d.name; });

      d3.select("#size").on("click", function() {
        div.selectAll("div")
            .data(treemap.value(function(d) { return d.size; }))
          .transition()
            .duration(1500)
            .call(cell);

        d3.select("#size").classed("active", true);
        d3.select("#count").classed("active", false);
      });

      d3.select("#count").on("click", function() {
        div.selectAll("div")
            .data(treemap.value(function(d) { return 1; }))
          .transition()
            .duration(1500)
            .call(cell);

        d3.select("#size").classed("active", false);
        d3.select("#count").classed("active", true);
      });
    });

    function cell() {
      this
          .style("left", function(d) { return d.x + "px"; })
          .style("top", function(d) { return d.y + "px"; })
          .style("width", function(d) { return d.dx - 1 + "px"; })
          .style("height", function(d) { return d.dy - 1 + "px"; });
    }

div class="row"
  div class="span12"
    div class="row"
      div class="span6"
        == render :partial => 'shared/us_census'
      div class="span6"
        == render :partial => 'shared/tax_stamp'

div class="row"
  div class="span6"
    - if !@project.description.empty?
      h1
        ' Description
      p == RedCloth.new(@project.description, [:filter_html, :filter_styles, :filter_classes, :filter_ids]).to_html

  div class="span6"
    - if !@project.summary.empty?
      h1
        ' Summary
      p == RedCloth.new(@project.summary, [:filter_html, :filter_styles, :filter_classes, :filter_ids]).to_html

hr

div class="row"
  div class="span12"
        div class="row"

          div class="span6 barchart-widget"
            h1 Where money comes from
            table class="table table-condensed"
              tr
                td Total Budgeted Revenue
                td class="number" #{best_in_place @project, :revenue_budget, :type => :input, :display_with => :number_to_currency, :helper_options => {:precision => 0}}
              tr
                td Revenue Categories Total
                td class="number" #{number_to_currency(@revenue_categories.sum(:revenue_budget), :precision => 0)}
              tr
                - if @project.revenue_budget != @revenue_categories.sum(:revenue_budget)
                  td
                    | Budget and category totals aren't equal
                - else
                  td
                    | Budget and category totals match
                td class="number" = number_to_currency(@project.revenue_budget - @revenue_categories.sum(:revenue_budget), :precision => 0)

            - for category in @revenue_categories
              div class="bar-container"
                div class="bar-category-text"
                  h3
                    = link_to category.name, organization_project_category_path(@organization, @project, category)
                    '
                    = best_in_place category, :revenue_budget, :type => :input, :display_with => :number_to_currency, :helper_options => {:precision => 0}
                div class="progress progress-success"
                  - if @project.expense_budget > 0
                    div class="bar" style="width: #{((category.revenue_budget/@project.revenue_budget)*100).to_i}%;"

          div class="span6 barchart-widget"
            h1 Where money goes
            table class="table table-condensed"
              tr
                td Total Budgeted Expenses
                td class="number" #{best_in_place @project, :expense_budget, :type => :input, :display_with => :number_to_currency, :helper_options => {:precision => 0}}
              tr
                td Expense Categories Total
                td class="number" #{number_to_currency(@expense_categories.sum(:expense_budget), :precision => 0)}
              tr
                - if @project.expense_budget != @expense_categories.sum(:expense_budget)
                  td
                    | Budget and category totals aren't equal
                - else
                  td
                    | Budget and category totals match
                td class="number" = number_to_currency(@project.expense_budget - @expense_categories.sum(:expense_budget), :precision => 0)

            - for category in @expense_categories
              div class="bar-container"
                div class="bar-category-text"
                  h3
                    = link_to category.name, organization_project_category_path(@organization, @project, category)
                    '
                    = best_in_place category, :expense_budget, :type => :input, :display_with => :number_to_currency, :helper_options => {:precision => 0}
                div class="progress progress-danger"
                  - if @project.expense_budget > 0
                    div class="bar" style="width: #{((category.expense_budget/@project.expense_budget)*100).to_i}%;"
div class="row"
  div class="span6"
    h2 Nearby
    ul class="nav list"
      - for org in Organization.near(@project.organization.name + ", " + @project.organization.state).limit(10)
        li 
          h4 = link_to "#{org.name}, #{org.state}", organization_path(org)

== render :partial => 'shared/comments'